//	Tinker Script to provide a keyboard layout that [rather slavishly]
//	 follows the layout (and quirks) of the DevRomU.KMN Keyman layout,
//	 with a few enhancements.
//
//	 This script is primarily for users who are already accustomed to the DevRom layout.
//	 (It does not take advantage of newer keying techniques made feasible by InKey.)
//
//  PARAMETERS:  (User-selected options for a keyboard.)
//    SwapSHA=1	Swap SHA (z) and SSA (S) keys from original DevRom layout
//    ScriptDigit=1 	Use Devanagari digits rather than Western digits by default.
//    SwapHalfH=1	Swap x and shift+x behavior after h, for languages that
//			 prefer ह्‌ to ह्‍
//    UseLLA=1		For languages that don't need LLA (ळ), shift+L can give a
//			 shortcut for lo-R (e.g in क्र) otherwise obtained by typing  //... r
//    smartQuotes=1	Use Smart (double) quotes by default.  (Press " again to toggle this.)
//    ApostropheForTone=1	Use the apostrophe key (') for a tone mark (’)
//    OnlyDeadKeyForVowels=1  Only generate Independent form of vowel after 'q' deadkey
//
// Other differences from DevRomU.KMN:
// - Typing the q key to obtain an independent vowel is now mostly optional, as the vowel will
//   automatically be independent unless typed after a consonant or nukta (़).  In cases in which
//   you need an independent vowel after a consonant (e.g. गए), type the q (e.g. gqe) , or use an
//   InKey context-clearing key (such as Ins or End) instead of q.
// - The state of the CapsLock key will toggle between script and roman digits.
// - A digit will always follow the script of an immediately preceding digit.
// (e.g Press Right-Alt to get the first digit, then no need to hold it after that.)
// - Due to a tweak for Kangri, DevRom.KMN had no way to produce ह्‍ ( 93C, 200D),
//    which other lgs. presumably need.  Here you can type the shift+x to get the opposite
//    form.  (Default is specified with the SwapHalfH parameter.)
// - Visarga (ः) can alternatively be obtained by typing :::
// - Candra E and O can be obtained by typing candra (Ctrl+Alt+5) after
//   E/Ekar and O/Okar (phonology-centric), in addition to after AA/Aakar (shape-centric).
// - Given InKey's convenient language-switching shortcuts, DevRomU's use of
//   shift+q to activate roman text is unneccesary, so not implemented here.
//  -We even implemented DevRomU.KMN's "flying reph" behavior, fixing the bug that kept it from
//   working on cases of nukta without vowel (e.g. र्ल़), and keeping it from spitting out latin R
//   in cases where the context didn't match any of the options, instead preparing the reph to go on the
//   next consonant to be typed.
//  -For some reason, DevRomU.KMN intentially does not allow you to type an @.
//   We have left this "feature" unimplemented.
//   -You can type n;y to get NYA and g;y to get GYA.  (nxy/nY and gxy/gY will still get the "half-char-plus-YA" forms)
//   -Any characters that previously required Ctrl+Alt key combinations can now be obtained by easier methods.
//
//	 Keyboard:		DevRom Unicode
//	 Version:			0.6
//	 Date Modified:	2015-04-20
//	 History:			Created by SAG
//

Settings:
  TinkerVersion: 2.000
  CapsSensitive: No

Options:
  - checkbox:
	name: SwapSHA
	label: Swap SHA (z) and SSA (S) keys
	default: 0
  - checkbox:
	name: ScriptDigit
	label: Use Devanagari digits rather than Western digits by default
	default: 0
  - checkbox:
	name: SwapHalfH
	label: Swap x and shift+x behavior after h
	default: 0
  - checkbox:
	name: UseLLA
	label: Use LLA. (For languages that don't need LLA, shift+L can give a shortcut for lo-R)
	default: 1
  - checkbox:
	name: SmartQuotes
	label: Use Smart quotes by default
	default: 0
  - checkbox:
	name: ApostropheForTone
	label: Use apostrophe key for tone marker
	default: 0
  - checkbox:
	name: UseSmartVowels
	label: Only generate independent form of vowel after 'q' deadkey
	default: 0

... // end header

define reConsN [क-हक़-य़]〔93c〕?

function SendVowel 【syl】【dep】
	⌘if 〔UseSmartVowels〕 ⌘then  //  automatically choose independent or dependent based on context
		after 【〔1〕】 send 【〔syl〕】
		| after 【〔reConsN〕】 send 【〔dep〕】
		| 【〔syl〕】
	⌘else
		after 【〔1〕】 send 【〔syl〕】
		| 【〔dep〕】
	⌘endif

//... Key: Shift+R   - The flying reph typed in written (not phonetic) order.
//... You can get a flying reph in phonetic order by typing r before the syllable.
//... DevRom also allows you to obtain a flying reph by typing R at any point during or
//... following the construction of the syllable.
//... e.g. कर्ल़ि can be typed kl>iR or kl>Ri or klR>i.
R	> replace 【〔reConsN〕(〔94d〕[〔200d〕〔200c〕]*〔reConsN〕)*([〔93e〕-〔94c〕])?】 with 【र्$0】
	 | 【र्】

//...*** VOWELS

【q Q】	> 【〔1〕】	//... Deadkey 1: For forcing independent vowels


i	> map 【ि⇛ी】【इ⇛ई】                       //... double tap to turn short i into long ii
	 | after 【〔reConsN】 replace 【र्〔1〕】 with 【ऋ】   //... r;qi shortcut for ऋ
	 | after 【〔reConsN】 replace 【र्】 with 【ृ】     //...  r;i shortcut for ृ
	 | SendVowel 【इ】【ि】

I	> SendVowel 【ई】【ी】

a	> replace 【अ】 with 【आ】  //... just as with DevRom, a syllabic A followed by 'a' gives syllabic AA
	 | SendVowel 【अ】【ा】

A	> SendVowel 【आ】【ा】	//...|	devanagari_letter_aa (आ)  devanagari_vowel_sign_aa (ा)

u	> map 【ु⇛ू】【उ⇛ऊ】                          //... double tap to turn short u into long uu
	 | SendVowel 【उ】【ु】

U	> SendVowel 【ऊ】【ू】	//...|	devanagari_letter_uu (ऊ)  devanagari_vowel_sign_uu (ू)

e	> SendVowel 【ए】【े】	//...|	devanagari_letter_e (ए)  devanagari_vowel_sign_e (े)

E	> map 【े⇛ै】【ए⇛ऐ】                          //... double tap to turn e into ai
	 | SendVowel 【ऐ】【ै】	//...|	devanagari_letter_ai (ऐ)  devanagari_vowel_sign_ai (ै)

o	> map 【ो⇛ौ】【ओ⇛औ】                          //... double tap to turn e into ai
	 | SendVowel 【ओ】【ो】	//...|	devanagari_letter_o (ओ)  devanagari_vowel_sign_o (ो)

O	> SendVowel 【औ】【ौ】	//...|	devanagari_letter_au (औ)  devanagari_vowel_sign_au (ौ)

H	> map 【→ॅ→ॐ】【ा→ॉ】【ए→ऍ】【ो→ॉ】【आ→ऑ】【ओ→ऑ】【े→ॅ】   //... Shift+H adds candra.  Two of them makes OM.   (ॐ)

^!l	> SendVowel 【ऋ】【ृ】	//... Old DevRom keys for devanagari_letter_vocalic_r (ऋ)  devanagari_vowel_sign_vocalic_r (ृ).  You can also use r;i


//...*** CONSONANTS
k	> 【क】
K	> 【ख】
g	> 【ग】
G	> 【घ】
M	> 【ङ】
c	> 【च】
C	> 【छ】
j	> 【ज】
J	> 【झ】
^!n	> 【ञ】
f	> 【ट】
F	> 【ठ】
v	> 【ड】
V	> 【ढ】
N	> 【ण】
t	> 【त】
T	> 【थ】
d	> 【द】
D	> 【ध】
n	> 【न】
p	> 【प】
P	> 【फ】
b	> 【ब】
B	> 【भ】
m	> 【म】
r	> 【र】
l	> 【ल】
w	> 【व】
h	> 【ह】
W	> 【द्व】	//... Shortcut for dwa //...|	devanagari_letter_da (द)  devanagari_sign_virama (्)  devanagari_letter_va (व)
y	> map 【न्→ञ】【न्‍→न्य】【ग्→ज्ञ】【ग्‍→ग्य】
	 | 【य】	//... Pressing Y key:   n;y for NYA, g;y for GYA (and nxy and gxy as alternatives to nY and gY)
【^!2	^!j】	> 【ज्ञ】	//...|	devanagari_letter_ja (ज)  devanagari_sign_virama (्)  devanagari_letter_nya (ञ)   (old DevRom keys for GYA)
Y	> 【्य】		//... shortcut for join -ya  //...|	devanagari_sign_virama (्)  devanagari_letter_ya (य)

s	> 【स】
Z	> 【क्ष】	//... shortcut for ksHa //...|	devanagari_letter_ka (क)  devanagari_sign_virama (्)  devanagari_letter_ssa (ष)

⌘if 〔SwapSHA〕 ⌘then
S	> 【श】		//...|	devanagari_letter_ssa (ष)
z	> 【ष】
⌘else
S	> 【ष】		//...|	devanagari_letter_ssa (ष)
z	> map 【क्→क्ष】  //... Alternate keying for ksHa as k;z.  You could also type it at k;S or simply Z
	 | 【श】
⌘endif


L	> ⌘if 〔UseLLA〕 ⌘then 【ळ】 ⌘else 【्र】 ⌘endif

//...*** MISC:

//... Pressing colon key.  If you use ः more often than ऽ, just swap their order in this rota.
:	> map 【: ऽ ः	::】  //... Colon key => rota: colon, avagraha, visarga
	 | 【:】

^!h	> 【ऽ】		//... Old DevRom key for devanagari_sign_avagraha (ऽ)
^!;	> 【ः】		//... Old DevRom key for devanagari_sign_visarga (ः)

`	> 【ँ】    //...    0x901)		//...|	devanagari_sign_candrabindu (ँ)
~	> 【ं】 //... 0x902)		//...|	devanagari_sign_anusvara (ं)


.	> map 【। . ॥	…】
	 | 【।】

^!3	> 【〔2026〕】		//... Old DevRom key for horizontal_ellipsis (…)

//... Pressing GreaterThan key (>) for nukta and abbreviation symbol
>	> map 【़ ॰】  //... Key: RightWedge (>)	rota: devanagari_sign_nukta (़)  and devanagari_abbreviation_sign (॰)
	 | 【़】


^!0	> 【〔970〕】		//... Old DevRom key for devanagari_abbreviation_sign (॰)
^![	> 【〔93c〕】		//... Old DevRom key for devanagari_sign_nukta (़)

;	> 【〔94D〕】		//... Key: semi-colon (;)   => devanagari_sign_virama (्)

//... Keys: x and X		- For virama+ZWJ.  (Exception:  With SwapHalfH option, after HA send ZWNJ)
⌘if 〔SwapHalfH〕 ⌘then
x	> after 【ह】 send 【्〔200C〕】
	 | 【्〔200D〕】
X	> after 【ह】 send 【्〔200D〕】
	 | 【्〔200C〕】
⌘else
x	> 【्〔200D〕】
X	> 【्〔200C〕】
⌘endif


//...---------------------------------------------
function DoDigit 【western】【dev】【reverse】
	after 【[0-9]】 send 【〔western〕】
	| after 【[०-९]】 send 【〔dev〕】
	| ⌘if 〔ScriptDigit〕 ^ 〔reverse〕 ⌘then 【〔dev〕】 ⌘else 【〔western〕】 ⌘endif //... It also used to toggle additionally on the CAPS state. Can we do that in Tinker??

//...*** ALL DIGIT KEYS
0	> DoDigit 【0】【०】【0】
1	> DoDigit 【1】【१】【0】
2	> DoDigit 【2】【२】【0】
3	> DoDigit 【3】【३】【0】
4	> DoDigit 【4】【४】【0】
5	> DoDigit 【5】【५】【0】
6	> DoDigit 【6】【६】【0】
7	> DoDigit 【7】【७】【0】
8	> DoDigit 【8】【८】【0】
9	> DoDigit 【9】【९】【0】

>!0	> DoDigit 【0】【०】【1】
>!1	> DoDigit 【1】【१】【1】
>!2	> DoDigit 【2】【२】【1】
>!3	> DoDigit 【3】【३】【1】
>!4	> DoDigit 【4】【४】【1】
>!5	> DoDigit 【5】【५】【1】
>!6	> DoDigit 【6】【६】【1】
>!7	> DoDigit 【7】【७】【1】
>!8	> DoDigit 【8】【८】【1】
>!9	> DoDigit 【9】【९】【1】

//... Misc keys, not particularly Devanagari related

// Dash key: double-tap for n-dash, triple-tap for m-dash. If more than that, just go back to all dashes.
- > after 【----】 send 【-】
  | 【- – — ----】

[	> 【[ ⌊】  //... type [[ for ⌊ left_floor
]	> 【] ⌋】	//... type ]] for ⌋ right_floor


⌘if 〔SmartQuotes〕 ⌘then
"	> loopMap 【" “ ”】
	| after 【[^\[ ‘\t\n\(⌊]】 send 【”】
	| 【“】

'	> loopMap 【' ‘ ’】
	| after 【[^\[ “\t\n\(⌊]】 send 【’】
	| 【‘】
⌘endif


