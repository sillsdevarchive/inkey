/*	InKey script to provide a keyboard layout for GENERIC.

	Keyboard:	GENERIC
	Version:	1.0
	Author:
	Official Distribution:	http://inkeysoftware.com

	You are free to modify this script for your own purposes. Please give credit as appropriate.

Remarks:

HISTORY:
*/

;________________________________________________________________________________________________________________
; This section is required at the top of every InKey keyboard script:

K_MinimumInKeyLibVersion = 0.094
	; The version number of the InKeyLib.ahki file that the keyboard developer used while writing this script.
	; It can be found near the top of the InKeyLib.ahki file.
	; It may be lower than the InKey version number.
	; If a user has an older version of InKeyLib.ahki, he will need to update it in order to use this keyboard script.
	; This protects your script from crashing from attempting to use functionality not present in older versions of InKeyLib.ahki.

K_UseContext = 2	; Causes uncaptured character keys to be included in the context too.  CONTEXT SENSITIVE

#include InKeyLib.ahki

OnLoadScript:	; This section is executed when this InKey script is first loaded.
	RegisterRota(300, "ÃÄ`` ÃÄ ``", 0x300)
	RegisterRota(301, "ÃÅ' ÃÅ '", 0x301)
	RegisterRota(302, "ÃÇ^ ÃÇ ^", 0x302)
	RegisterRota(1303, "ÃÉ~ ÃÉ ~", 0x303)  ; Basic version of the tilde rota
	CreateRota(303, RotaSets("√ë~ N √ë N~", "√±~ n √± n~", "ÃÉ~ ÃÉ ~"), "ùÑû")  ; Tilde rota with explicit n forms
	RegisterRota(308, "Ãà`; Ãà `;", 0x0308)
	RegisterRota(335, RotaSets("L »Ω ‚±†", "l ∆ö ‚±°", "I ∆ó", "i …®", "u  â", "U …Ñ", "n ≈ã", "N ≈ä", "?  î", "v  å", "V …Ö"), 0x3D, 0, 0, 1)
	;~ RegisterRota(1, RotaSets("‡§ø	‡•Ä", "‡§á	‡§à",
	;~ or SendText("‡§à")
	CreateRota(2, RotaSets("‡§ø ‡§á", "‡•Ä ‡§à", "‡•Å ‡§â", "‡•Ç ‡§ä"))
	RegisterRota(7, "ùÑû êÄÄ êÄÅ êÄÇ", 0x3D, 0, 0, 1)
	CreateRota(37, 	RotaSets("‡§ø	‡•Ä", "‡§á	‡§à"), "‡§á")
	CreateRota(38, 	RotaSets("‡§ø	‡•Ä", "‡§á	‡§à"))
	CreateRota(94, "‡•ç ‡•ç‚Äç ‡•ç‚Äå", "‡•ç")

	sCons = [‡§ï-‡§π‡•ò-‡•ü]
	consCluster = %sCons%\x{93c}?(?:\x{94d}[\x{200d}\x{200c}]*%sCons%\x{93c}?)?
	gConsCluster = (%consCluster%)
	return

; _______________________________________________________

;~ $`::DoRota(300)
$`::DoRota(2)
$'::DoRota(301)
$^::DoRota(302)
$[::DoRota(1303)
$~::DoRota(303)
$;::DoRota(308)
$=::DoRota(335)

;~ $1::SendChars("0x61, 0x303")	; Send aÃÉ as a + combining tilde	     (NFD)
;~ $2::SendChar(0xE3)		; Send aÃÉ as precomposed character  (NFC)
;~ $3::SendText("nÃÉ")
;~ $4::SendChar(0xF1)		; Send √± as precomposed character  (NFC)
;~ $5::SendChars("0x6E, 0x303")	; Send √± as n + combining tilde	     (NFD)

;~ $1::InContextSend("(b[‚ë§‚ë£‚ë¢‚ë°‚ë†]*)", "‚ë†") or InContextReplace("([‚ë°‚ë¢‚ë£‚ë§]+)", "‚ë†$1") or SendText("‚ë†")
;~ $2::InContextReplace("(b[‚ë§‚ë£‚ë¢‚ë°]*)(‚ë†*)", "$1‚ë°$2") or InContextReplace("([‚ë¢‚ë£‚ë§]+)", "‚ë°$1") or SendText("‚ë°")
;~ $3::InContextReplace("(b[‚ë§‚ë£‚ë¢]*)([‚ë°‚ë†]*)", "$1‚ë¢$2") or InContextReplace("([‚ë£‚ë§]+)", "‚ë¢$1") or SendText("‚ë¢")
;~ $4::InContextReplace("(b[‚ë§‚ë£]*)([‚ë¢‚ë°‚ë†]*)", "$1‚ë£$2") or InContextReplace("(‚ë§+)", "‚ë£$1") or SendText("‚ë£")
;~ $5::InContextReplace("(b‚ë§*)([‚ë£‚ë¢‚ë°‚ë†]*)", "$1‚ë§$2") or SendText("‚ë§")

$1::InContextReplace("([‚ë°‚ë¢‚ë£‚ë§]+)", "‚ë†$1") or SendText("‚ë†")
$2::InContextReplace("([‚ë¢‚ë£‚ë§]+)", "‚ë°$1") or SendText("‚ë°")
$3::InContextReplace("([‚ë£‚ë§]+)", "‚ë¢$1") or SendText("‚ë¢")
$4::InContextReplace("(‚ë§+)", "‚ë£$1") or SendText("‚ë£")
$5::SendText("‚ë§")

$6::
SendChar(0xD800)
SendChar(0xDC00)
return

$7::SendText("ùÑû")
$8::DoRota(7)
$9::SendChar(0x1d11e)
$q::SendChar(0x1d11f)
$w::SendChar(0x1d120)
$c::SendChar(0x1d121)
$v::SendChar(0x1d122)
;~ $b::TrayTipQ("you pressed the hash key")
$e::InContextSend("[A-Z]", "A") or SendText("a")
;~ $r::InContextReplace("(\p{L})\p{M}\p{L}*", "@$1") or SendText("ARR")

$k::SendText("‡§ï")
$+k::SendText("‡§ñ")
$g::SendText("‡§ó")
$+g::SendText("‡§ò")

$f::SendChar(0x93c) ; nukta

;~ $i::
	;~ InContextSend($consCluster, "‡§ø")
	;~ or InContextReplace("‡§ø", "‡•Ä")
	;~ or InContextReplace("‡§á", "‡§à")
	;~ or SendText("‡§á")
	;~ return

;~ $i::InContextSend("[‡§ï-‡§π‡•ò-‡•ü]\x{93c}?", "‡§ø") or DoRota(37)

$i::
	;~ SpeedRota("‡§ø	‡•Ä", "‡§á	‡§à")
	;~ DoRota(38)
	MultiTap() and DoRota(38)		; InRota(RotaSets("‡§ø	‡•Ä", "‡§á	‡§à"))
	;~ MultiTap() and InRota(RotaSets("‡§ø	‡•Ä", "‡§á	‡§à"))
	or InContextSend("[‡§ï-‡§π‡•ò-‡•ü]\x{93c}?", "‡§ø", "‡§á")
	return

$r::SendText("‡§∞")
$+r::InContextReplace(gConsCluster, "‡§∞‡•ç$1", "‡§∞")

$z::SendText("‡§∑")
$x::DoRota(94)
